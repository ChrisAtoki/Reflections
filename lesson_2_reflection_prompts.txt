What happens when you initialize a repository? Why do you need to do it?
	When you initialize a repository. Git starts a repository in the directory that you are in. You need to do it so you can start making commits.
How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area is where files are before they get committed. The files go from the working directory to the staging area. It offers more flexiblilty.
How can you use the staging area to make sure you have one commit per logical
change?
	I can use the staging area and use git diff --staged to look at the changes and make sure that they are reasonable changes.
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Branches can help because you can do many things at once and keep track of all of them. It helps keep your thoughts in order while letting you work on multiple things.
How do the diagrams help you visualize the branch structure?
	They help show you which commits might be unreachable.
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	The result of merging two braches together is that you can add the features of one branch to another and you can make all commits from both branches reachable from one.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	When Git does it it makes it easier rather than having to do it all on you own.